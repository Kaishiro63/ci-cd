name: Vercel CI/CD

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project to Vercel
        id: vercel_deploy
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Comment PR with Preview URL
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployment = '${{ steps.vercel_deploy.outputs.url }}';
            const prNumber = github.context.payload.pull_request.number;
            const owner = github.context.repo.owner;
            const repo = github.context.repo.repo;
            const comment = `Preview URL: ${deployment}`;
            await github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: comment
            });

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project to Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
