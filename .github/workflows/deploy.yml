name: Vercel CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel Staging
        if: github.event_name == 'pull_request'
        id: vercel_deploy
        run: |
          vercel --token=$VERCEL_TOKEN --scope=$VERCEL_ORG_ID --project=$VERCEL_PROJECT_ID --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const execSync = require('child_process').execSync;
            const deploymentOutput = execSync('vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID --project $VERCEL_PROJECT_ID --yes').toString();
            const urlMatch = deploymentOutput.match(/https:\/\/[^\s]+/);
            const deploymentUrl = urlMatch ? urlMatch[0] : null;
            if (deploymentUrl) {
              const prNumber = context.payload.pull_request.number;
              const owner = context.repo.owner;
              const repo = context.repo.repo;
              const comment = `Preview URL: ${deploymentUrl}`;
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: prNumber,
                body: comment
              });
            } else {
              throw new Error('Failed to retrieve deployment URL.');
            }
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Vercel Args
        id: vercel_args
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            echo "vercel-args=--prod" >> $GITHUB_OUTPUT
          else
            echo "vercel-args=" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Vercel Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          vercel ${{ steps.vercel_args.outputs.vercel-args }} --token=$VERCEL_TOKEN --scope=$VERCEL_ORG_ID --project=$VERCEL_PROJECT_ID --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
